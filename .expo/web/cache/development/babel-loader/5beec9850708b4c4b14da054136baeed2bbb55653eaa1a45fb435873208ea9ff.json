{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TrackPlayer from 'react-native-track-player';\nimport { setupPlayer, addTrack } from \"./musicController\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    play = _useState2[0],\n    setPlay = _useState2[1];\n  useEffect(function () {\n    function setup() {\n      return _setup.apply(this, arguments);\n    }\n    function _setup() {\n      _setup = _asyncToGenerator(function* () {\n        var isSetup = yield setupPlayer();\n        yield addTrack();\n        setPlay(isSetup);\n      });\n      return _setup.apply(this, arguments);\n    }\n    setup();\n  }, []);\n  if (!play) {\n    return _jsx(ActivityIndicator, {});\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Play\",\n      onPress: function onPress() {\n        return TrackPlayer.play();\n      }\n    }), _jsx(Button, {\n      title: \"pause\",\n      color: \"#000\",\n      onPress: function onPress() {\n        return TrackPlayer.pause();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f8f8f8'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","TrackPlayer","setupPlayer","addTrack","App","play","setPlay","setup","isSetup","styles","container","pause","StyleSheet","create","flex","justifyContent","padding","backgroundColor"],"sources":["C:/Users/devandroid/Desktop/AccesoMultReactNative/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Button,\n  ActivityIndicator,\n} from 'react-native';\nimport TrackPlayer from 'react-native-track-player';\nimport { setupPlayer, addTrack } from './musicController';\n\nfunction App() {\n\n  const [play, setPlay] = useState(false);\n\n  useEffect(() => {\n    async function setup() {\n      let isSetup = await setupPlayer();\n      await addTrack();\n      setPlay(isSetup);\n    }\n    setup();\n  }, []);\n\n  if(!play) {\n    return (\n        <ActivityIndicator/>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Button \n        title=\"Play\" \n        onPress={() => TrackPlayer.play()}  \n      />\n      <Button \n        title=\"pause\" \n        color='#000'\n        onPress={() => TrackPlayer.pause()} \n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f8f8f8'\n  }\n});\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAOnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,WAAW,EAAEC,QAAQ;AAA4B;AAAA;AAE1D,SAASC,GAAG,GAAG;EAEb,gBAAwBJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhCK,IAAI;IAAEC,OAAO;EAEpBP,SAAS,CAAC,YAAM;IAAA,SACCQ,KAAK;MAAA;IAAA;IAAA;MAAA,2BAApB,aAAuB;QACrB,IAAIC,OAAO,SAASN,WAAW,EAAE;QACjC,MAAMC,QAAQ,EAAE;QAChBG,OAAO,CAACE,OAAO,CAAC;MAClB,CAAC;MAAA;IAAA;IACDD,KAAK,EAAE;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACF,IAAI,EAAE;IACR,OACI,KAAC,iBAAiB,KAAE;EAE1B;EAEA,OACE,MAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,MAAM;MACL,KAAK,EAAC,MAAM;MACZ,OAAO,EAAE;QAAA,OAAMT,WAAW,CAACI,IAAI,EAAE;MAAA;IAAC,EAClC,EACF,KAAC,MAAM;MACL,KAAK,EAAC,OAAO;MACb,KAAK,EAAC,MAAM;MACZ,OAAO,EAAE;QAAA,OAAMJ,WAAW,CAACU,KAAK,EAAE;MAAA;IAAC,EACnC;EAAA,EACG;AAEX;AAEA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}